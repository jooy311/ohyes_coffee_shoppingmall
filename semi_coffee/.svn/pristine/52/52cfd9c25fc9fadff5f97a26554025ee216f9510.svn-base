package ohyes.coffee.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import ohyes.coffee.dto.ProductDTO;

public class ProductDAO extends JdbcDAO{
	//싱글톤 사용
		private static ProductDAO _dao;
		
		public ProductDAO() {
			// TODO Auto-generated constructor stub
		}
		
		static {
			_dao = new ProductDAO();
		}
		
		public static ProductDAO getProductDAO() {
			return _dao;
		}
	public int insertProduct(ProductDTO product) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			
			String sql="insert into member values(?,?,?,?,?,?,?,?,?,?,sysdate,'1',?)";
			pstmt=con.prepareStatement(sql);
			pstmt.setString(1, product.getpNo());
			pstmt.setInt(2, product.getPcategoryCode());
			pstmt.setInt(3, product.getpStock());
			pstmt.setString(4, product.getpName());
			pstmt.setInt(5, product.getpCost());
			pstmt.setString(6, product.getpBrief());
			pstmt.setString(7, product.getpImage());
			pstmt.setString(8, product.getpImagePath());
			pstmt.setString(9, product.getpImageDetail());
			pstmt.setString(10, product.getpImageDetailPath());
			pstmt.setInt(11, product.getpSalesCount());
			
			rows=pstmt.executeUpdate();
		} catch (SQLException e) {
			System.out.println("[에러]insertProduct() 메소드의 SQL 오류 = "+e.getMessage());
		} finally {
			close(con, pstmt);
		}
		return rows;
	}
	
	public int updateProduct(ProductDTO product) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			
			String sql="UPDATE PRODUCT SET P_STOCK=?, P_NAME=?, P_COST=?, P_BREEF=?, P_IMAGE=?, P_IMGAE_PAHT=?, P_IMAG_EDETAIL=?, P_IMAGE_DETAIL_PATH=?, P_DATE=SYSDATE, P_ISDELETE=? WHERE P_NO=?";
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, product.getpStock());
			pstmt.setString(2, product.getpName());
			pstmt.setInt(3, product.getpCost());
			pstmt.setString(4, product.getpBrief());
			pstmt.setString(5, product.getpImage());
			pstmt.setString(6, product.getpImagePath());
			pstmt.setString(7, product.getpImageDetail());
			pstmt.setString(8, product.getpImageDetailPath());
			pstmt.setString(9, product.getpStatus());
			pstmt.setString(10, product.getpNo());
			
			rows=pstmt.executeUpdate();
		}catch (SQLException e) {
			System.out.println("[에러]updateProduct() 메소드의 SQL 오류 = "+e.getMessage());
		}finally {
			close(con, pstmt);
		}
		return rows;
	}

	public int deleteProduct(String no) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			
			String sql="UPDATE P_ISDELETE=0 WHERE P_NO=?";
			pstmt=con.prepareStatement(sql);
			pstmt.setString(1, no);
			
			rows=pstmt.executeUpdate();
		}catch (SQLException e) {
			System.out.println("[에러]deleteProduct() 메소드의 SQL 오류 = "+e.getMessage());
		}finally {
			close(con, pstmt);
		}
		return rows;
	}
	
	public ProductDTO selectNoProduct(String no) {
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		ProductDTO product=null;
		try {
			con=getConnection();
			
			String sql="SELECT * FROM PRODUCT WHERE P_NO=?";
			pstmt=con.prepareStatement(sql);
			pstmt.setString(1, no);
			rs=pstmt.executeQuery();
			if(rs.next() ) {
				product=new ProductDTO();
				product.setpNo(rs.getString("p_no"));
				product.setPcategoryCode(rs.getInt("pcategory_code"));
				product.setpStock(rs.getInt("p_stock"));
				product.setpName(rs.getString("p_name"));
				product.setpCost(rs.getInt("p_cost"));
				product.setpBrief(rs.getString("p_brief"));
				product.setpImage(rs.getString("p_image"));
				product.setpImagePath(rs.getString("p_image_path"));
				product.setpImageDetail(rs.getString("p_image_detail"));
				product.setpImageDetailPath(rs.getString("p_image_detail_path"));
				product.setpDate(rs.getString("p_date"));
				product.setpStatus(rs.getString("p_status"));
				product.setpSalesCount(rs.getInt("p_salescount"));
			}
			
		}catch (SQLException e) {
			System.out.println("[에러]selectNoProduct() 메소드의 SQL 오류 = "+e.getMessage());
		}finally {
			close(con, pstmt, rs);
		}
		return product;
	}
	
	//카테고리 페이지에서 상품출력하기 위한 메소드
	public List<ProductDTO> selectProduct(String no){
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		List<ProductDTO> productList=new ArrayList<ProductDTO>();
		try {
			con=getConnection();
			
			if(no.equals("")||no==null) {
				String sql="SELECT * FROM PRODUCT ORDER BY PCATEGORY_CODE";
				pstmt=con.prepareStatement(sql);
			} else {
				String sql="SELECT * FROM PRODUCT WHERE PCATEGORY_CODE=?";
				pstmt=con.prepareStatement(sql);
				pstmt.setString(1, no);
			}
			rs=pstmt.executeQuery();
			
			while(rs.next()) {
				ProductDTO product=new ProductDTO();
				product.setpNo(rs.getString("p_no"));
				product.setPcategoryCode(rs.getInt("pcategory_code"));
				product.setpStock(rs.getInt("p_stock"));
				product.setpName(rs.getString("p_name"));
				product.setpCost(rs.getInt("p_cost"));
				product.setpBrief(rs.getString("p_brief"));
				product.setpImage(rs.getString("p_image"));
				product.setpImagePath(rs.getString("p_image_path"));
				product.setpImageDetail(rs.getString("p_image_detail"));
				product.setpImageDetailPath(rs.getString("p_image_detail_path"));
				product.setpDate(rs.getString("p_date"));
				product.setpStatus(rs.getString("p_status"));
				product.setpSalesCount(rs.getInt("p_salescount"));
				
				productList.add(product);
			}
		}catch (SQLException e) {
			System.out.println("[에러]selectCategoryProduct() 메소드의 SQL 오류 = "+e.getMessage());
		}finally {
			close(con, pstmt, rs);
		}
		return productList;
	}
}
