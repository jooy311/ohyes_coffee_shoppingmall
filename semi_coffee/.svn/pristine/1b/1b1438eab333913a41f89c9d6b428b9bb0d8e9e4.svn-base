package ohyes.coffee.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import ohyes.coffee.dto.QnaDTO;

public class QnaAdminDAO extends JdbcDAO {

	public static QnaAdminDAO _dao;
	
	public QnaAdminDAO() {
		// TODO Auto-generated constructor stub
	}
	
	static {
		_dao=new QnaAdminDAO();
	}
	
	public static QnaAdminDAO getDAO() {
		return _dao;
	}
	
	/** 모든행 검색 **/
	public List<QnaDTO> selectQnaAdminAll(){
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		List<QnaDTO> qnaList=new ArrayList<QnaDTO>();
		
		try {
			con=getConnection();
			String sql="select * from qna where qna_status in (0, 1)";
			pstmt=con.prepareStatement(sql);
			rs=pstmt.executeQuery();
			
			while(rs.next()) {
				QnaDTO qna=new QnaDTO();
				qna.setQnaNo(rs.getInt("qna_no"));
				qna.setQnaTitle(rs.getString("qna_title"));
				qna.setQnaMemId(rs.getString("qna_mem_id"));
				qna.setQnaContents(rs.getString("qna_contents"));
				qna.setQnaDate(rs.getString("qna_date"));
				qna.setQnaReadcount(rs.getInt("qna_readcount"));
				qna.setQnaStatus(rs.getInt("qna_status"));
				qna.setQnaCode(rs.getInt("qna_code"));
				
				qnaList.add(qna);
			}
			
			
		} catch (SQLException e) {
			System.out.println("[에러]selectQnaAdminAll() 메소드의 SQL 오류 : "+e.getMessage());
		} finally {
			close(con, pstmt, rs);
		}
		
		return qnaList;
		
	}
	
	/** 행삽입 **/
	public int insertQnaAdmin(QnaDTO qna) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			
			String sql="insert into qna values(?,?,?,?,sysdate,0,0,?)";
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, qna.getQnaNo());
			pstmt.setString(2, qna.getQnaTitle());
			pstmt.setString(3, qna.getQnaMemId());
			pstmt.setString(4, qna.getQnaContents());
			pstmt.setInt(5, qna.getQnaCode());
			
			rows=pstmt.executeUpdate();
		} catch (SQLException e) {
			System.out.println("[에러]insertQnaAdmin() 메소드의 SQL 오류 : "+e.getMessage());
		} finally {
			close(con, pstmt);
		}
		return rows;
	}
	
	/** 단일행 검색 : 글번호 => DTO**/
		public QnaDTO selectQnaAdminNo(int no) {
			Connection con=null;
			PreparedStatement pstmt=null;
			ResultSet rs=null;
			QnaDTO qna=null;
			try {
				con=getConnection();
				
				String sql="select * from qna where qna_no=?";
				pstmt=con.prepareStatement(sql);
				pstmt.setInt(1, no);
				
				rs=pstmt.executeQuery();
				
				if(rs.next()) {
					qna=new QnaDTO();
					qna.setQnaNo(rs.getInt("qna_no"));
					qna.setQnaTitle(rs.getString("qna_title"));
					qna.setQnaMemId(rs.getString("qna_mem_id"));
					qna.setQnaContents(rs.getString("qna_contents"));
					qna.setQnaDate(rs.getString("qna_date"));
					qna.setQnaReadcount(rs.getInt("qna_readcount"));
					qna.setQnaStatus(rs.getInt("qna_status"));
					qna.setQnaCode(rs.getInt("qna_code"));
				}
			} catch (SQLException e) {
				System.out.println("[에러]selectQnaAdminNo() 메소드의 SQL 오류 : "+e.getMessage());
			} finally {
				close(con, pstmt, rs);
			}
			return qna;
		}
		
		/** 삭제 : 0으로 상태변경 **/
		public int deleteQnaAdmin(int qnaNo) {
			Connection con=null;
			PreparedStatement pstmt=null;
			int rows=0;
			try {
				con=getConnection();
				
				String sql="update qna set qna_status=2 where qna_no=?";
				pstmt=con.prepareStatement(sql);
				pstmt.setInt(1, qnaNo);
				
				rows=pstmt.executeUpdate();
			} catch (SQLException e) {
				System.out.println("[에러]deleteQnaAdmin() 메소드의 SQL 오류 : "+e.getMessage());
			} finally {
				close(con, pstmt);
			}
			return rows;
		}
}


















